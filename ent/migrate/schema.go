// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CarsColumns holds the columns for the "cars" table.
	CarsColumns = []*schema.Column{
		{Name: "car_id", Type: field.TypeString, Size: 100},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Size: 100},
	}
	// CarsTable holds the schema information for the "cars" table.
	CarsTable = &schema.Table{
		Name:       "cars",
		Columns:    CarsColumns,
		PrimaryKey: []*schema.Column{CarsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cars_users_car",
				Columns:    []*schema.Column{CarsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeptsColumns holds the columns for the "depts" table.
	DeptsColumns = []*schema.Column{
		{Name: "dept_id", Type: field.TypeString, Size: 100},
	}
	// DeptsTable holds the schema information for the "depts" table.
	DeptsTable = &schema.Table{
		Name:       "depts",
		Columns:    DeptsColumns,
		PrimaryKey: []*schema.Column{DeptsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Size: 100},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "race", Type: field.TypeEnum, Enums: []string{"YELLOW", "WHITE", "BLACK"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// DeptUserColumns holds the columns for the "dept_user" table.
	DeptUserColumns = []*schema.Column{
		{Name: "dept_id", Type: field.TypeString, Size: 100},
		{Name: "user_id", Type: field.TypeString, Size: 100},
	}
	// DeptUserTable holds the schema information for the "dept_user" table.
	DeptUserTable = &schema.Table{
		Name:       "dept_user",
		Columns:    DeptUserColumns,
		PrimaryKey: []*schema.Column{DeptUserColumns[0], DeptUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dept_user_dept_id",
				Columns:    []*schema.Column{DeptUserColumns[0]},
				RefColumns: []*schema.Column{DeptsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "dept_user_user_id",
				Columns:    []*schema.Column{DeptUserColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CarsTable,
		DeptsTable,
		UsersTable,
		DeptUserTable,
	}
)

func init() {
	CarsTable.ForeignKeys[0].RefTable = UsersTable
	DeptUserTable.ForeignKeys[0].RefTable = DeptsTable
	DeptUserTable.ForeignKeys[1].RefTable = UsersTable
}
